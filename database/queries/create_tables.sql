CREATE TABLE IF NOT EXISTS users (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
username TEXT NOT NULL UNIQUE,
email TEXT NOT NULL UNIQUE,
hashed_password BLOB NOT NULL,
salt BLOB NOT NULL,
register_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
nickname TEXT NOT NULL,
avatar_url TEXT NOT NULL,
status TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS friends (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
user_id1 INTEGER NOT NULL,
user_id2 INTEGER NOT NULL,
status TEXT NOT NULL DEFAULT pending,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(user_id1) REFERENCES users(id),
FOREIGN KEY(user_id2) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS messages (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
sender_id INTEGER NOT NULL,
receiver_id INTEGER NOT NULL,
content TEXT NOT NULL,
time_stamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(sender_id) REFERENCES users(id),
FOREIGN KEY(receiver_id) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS guilds (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
creator_id INTEGER NOT NULL,
name TEXT NOT NULL,
avatar_url TEXT NOT NULL,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(creator_id) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS server_channels (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
guild_id INTEGER NOT NULL,
header_id INTEGER,
name TEXT NOT NULL,
channel_type TEXT NOT NULL,
FOREIGN KEY(guild_id) REFERENCES guilds(id),
FOREIGN KEY(header_id) REFERENCES channels_header(id));

CREATE TABLE IF NOT EXISTS channels_header (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
guild_id INTEGER NOT NULL,
name TEXT NOT NULL,
FOREIGN KEY(guild_id) REFERENCES guilds(id));

CREATE TABLE IF NOT EXISTS server_message (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
channel_id INTEGER NOT NULL,
user_id INTEGER NOT NULL,
content TEXT NOT NULL,
time_stamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(channel_id) REFERENCES server_channels(id),
FOREIGN KEY(user_id) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS guild_members (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
user_id INTEGER NOT NULL,
guild_id INTEGER NOT NULL,
role TEXT NOT NULL DEFAULT member,
FOREIGN KEY(user_id) REFERENCES users(id),
FOREIGN KEY(guild_id) REFERENCES guilds(id));

CREATE TABLE IF NOT EXISTS feedbacks (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
created_by INTEGER NOT NULL,
content TEXT NOT NULL,
is_checked BOOLEAN NOT NULL DEFAULT 0,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(created_by) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS user_settings (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
user_id INTEGER NOT NULL,
setting_name TEXT NOT NULL,
setting_value TEXT NOT NULL,
FOREIGN KEY(user_id) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS guild_settings (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
guild_id INTEGER NOT NULL,
setting_name TEXT NOT NULL,
setting_value TEXT NOT NULL,
FOREIGN KEY(guild_id) REFERENCES guilds(id));

CREATE TABLE IF NOT EXISTS channel_settings (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
channel_id INTEGER NOT NULL,
setting_name TEXT NOT NULL,
setting_value TEXT NOT NULL,
FOREIGN KEY(channel_id) REFERENCES server_channels(id));